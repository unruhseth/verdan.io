"""initial_setup

Revision ID: 7899a2e478ce
Revises: 
Create Date: 2025-02-11 21:22:19.215596

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7899a2e478ce'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('subdomain', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('subdomain')
    )
    op.create_table('apps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon_url', sa.String(length=512), nullable=True),
    sa.Column('app_key', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('monthly_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('yearly_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('app_key'),
    sa.UniqueConstraint('name')
    )
    op.create_table('fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('flow_rate', sa.Float(), nullable=True),
    sa.Column('current_zone', sa.String(length=100), nullable=True),
    sa.Column('kml_file', sa.LargeBinary(), nullable=True),
    sa.Column('shp_file', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('fields', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fields_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_fields_name'), ['name'], unique=False)

    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.Column('alert_type', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['fields.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_alerts_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_alerts_alert_type'), ['alert_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_alerts_field_id'), ['field_id'], unique=False)

    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('controller_id', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['fields.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('equipment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_equipment_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_equipment_controller_id'), ['controller_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_equipment_field_id'), ['field_id'], unique=False)

    op.create_table('irrigation_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('schedule', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['fields.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('irrigation_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_irrigation_plans_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_irrigation_plans_field_id'), ['field_id'], unique=False)

    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=True),
    sa.Column('event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['fields.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_logs_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_logs_event_type'), ['event_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_logs_field_id'), ['field_id'], unique=False)

    op.create_table('user_apps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('app_name', sa.String(length=255), nullable=False),
    sa.Column('is_installed', sa.Boolean(), nullable=True),
    sa.Column('installed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('uninstalled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id', 'app_name', name='uix_account_app')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('firmware',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('release_date', sa.DateTime(), nullable=False),
    sa.Column('changelog', sa.Text(), nullable=True),
    sa.Column('file_data', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('firmware', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_firmware_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_firmware_equipment_id'), ['equipment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_firmware_version'), ['version'], unique=False)

    op.create_table('zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('application_rate', sa.Float(), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('kml_file', sa.LargeBinary(), nullable=True),
    sa.Column('shp_file', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('zones', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_zones_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_zones_equipment_id'), ['equipment_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('zones', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_zones_equipment_id'))
        batch_op.drop_index(batch_op.f('ix_zones_account_id'))

    op.drop_table('zones')
    with op.batch_alter_table('firmware', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_firmware_version'))
        batch_op.drop_index(batch_op.f('ix_firmware_equipment_id'))
        batch_op.drop_index(batch_op.f('ix_firmware_account_id'))

    op.drop_table('firmware')
    op.drop_table('users')
    op.drop_table('user_apps')
    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_logs_field_id'))
        batch_op.drop_index(batch_op.f('ix_logs_event_type'))
        batch_op.drop_index(batch_op.f('ix_logs_account_id'))

    op.drop_table('logs')
    with op.batch_alter_table('irrigation_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_irrigation_plans_field_id'))
        batch_op.drop_index(batch_op.f('ix_irrigation_plans_account_id'))

    op.drop_table('irrigation_plans')
    with op.batch_alter_table('equipment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_equipment_field_id'))
        batch_op.drop_index(batch_op.f('ix_equipment_controller_id'))
        batch_op.drop_index(batch_op.f('ix_equipment_account_id'))

    op.drop_table('equipment')
    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_alerts_field_id'))
        batch_op.drop_index(batch_op.f('ix_alerts_alert_type'))
        batch_op.drop_index(batch_op.f('ix_alerts_account_id'))

    op.drop_table('alerts')
    with op.batch_alter_table('fields', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fields_name'))
        batch_op.drop_index(batch_op.f('ix_fields_account_id'))

    op.drop_table('fields')
    op.drop_table('apps')
    op.drop_table('account')
    # ### end Alembic commands ###
